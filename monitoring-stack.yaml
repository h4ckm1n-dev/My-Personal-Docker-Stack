version: '3.8'

services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    network_mode: "host"
    volumes:
      - open-webui:/app/backend/data
    environment:
      - OLLAMA_API_BASE_URL=http://127.0.0.1:11434/api
    restart: always
    
  prometheus:
    image: prom/prometheus:v2.34.0
    volumes:
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring_network

  alertmanager:
    image: prom/alertmanager:v0.23.0
    volumes:
      - /etc/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:8.4.5
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - monitoring_network

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    volumes:
      - "/:/host:ro,rslave"
    command:
      - '--path.rootfs=/host'
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - monitoring_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes: 
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices: 
      - "/dev/kmsg"
    ports:
      - "8880:8080"
    restart: unless-stopped
    networks:
      - monitoring_network

  loki:
    image: grafana/loki:2.4.1
    ports:
      - "3100:3100"
    command:
      - -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    restart: unless-stopped
    networks:
      - monitoring_network

  promtail:
    image: grafana/promtail:2.4.1
    volumes:
      - "/var/log:/var/log"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/etc/promtail:/etc/promtail"
    command:
      - -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring_network

  watchtower:
    image: containrrr/watchtower
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command:
      - --interval
      - "30"
    restart: unless-stopped
    networks:
      - monitoring_network

volumes:
  open-webui:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  monitoring_network:
    driver: bridge
