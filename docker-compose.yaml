version: "3.8"

services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:v0.1.120
    network_mode: "host"
    volumes:
      - open-webui:/app/backend/data
    environment:
      - OLLAMA_BASE_URLS=http://127.0.0.1:11434
    restart: always

  prometheus:
    image: prom/prometheus:v2.51.2
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Mount the config file directly
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - network

  alertmanager:
    image: prom/alertmanager:v0.27.0-rc.0
    volumes:
      - ./config/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml  # Ensure the correct file path
      - alertmanager_data:/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - network

  grafana:
    image: grafana/grafana:10.4.2
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - network

  nodeexporter:
    image: prom/node-exporter:v1.7.0
    volumes:
      - "/:/host:ro,rslave"
    command:
      - "--path.rootfs=/host"
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    volumes:
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices:
      - "/dev/kmsg"
    ports:
      - "8880:8080"
    restart: unless-stopped
    networks:
      - network

  loki:
    image: grafana/loki:3.0.0
    volumes:
      - ./config/loki/local-config.yaml:/etc/loki/local-config.yaml  # Direct file mount
      - loki_data:/loki
    command:
      - -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    restart: unless-stopped
    networks:
      - network

  promtail:
    image: grafana/promtail:3.0.0
    volumes:
      - ./config/promtail/config.yml:/etc/promtail/config.yml  # Ensure the correct file path
      - "/var/log:/var/log"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
    command:
      - -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - network

  watchtower:
    image: containrrr/watchtower:1.7.1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command:
      - --interval 30
    restart: unless-stopped
    networks:
      - network

  blackbox-exporter:
    image: bitnami/blackbox-exporter:0.25.0
    volumes:
      - ./config/blackbox/blackbox.yml:/config/blackbox.yml  # Direct file mount
    command:
      - "--config.file=/config/blackbox.yml"
    ports:
      - "9116:9115"
    restart: unless-stopped
    networks:
      - network

volumes:
  open-webui:
  prometheus_data:
  grafana_data:
  loki_data:
  alertmanager_data:

networks:
  network:
    driver: bridge
