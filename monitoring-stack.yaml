version: "3.8"

services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:v0.1.112
    network_mode: "host"
    volumes:
      - open-webui:/app/backend/data
    environment:
      - OLLAMA_BASE_URLS=http://127.0.0.1:11434
    restart: always

  prometheus:
    image: prom/prometheus:v2.50.1
    volumes:
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring_network

  alertmanager:
    image: prom/alertmanager:v0.27.0-rc.0
    volumes:
      - /etc/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:10.4.0
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - monitoring_network

  nodeexporter:
    image: prom/node-exporter:v1.7.0
    volumes:
      - "/:/host:ro,rslave"
    command:
      - "--path.rootfs=/host"
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - monitoring_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    volumes:
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices:
      - "/dev/kmsg"
    ports:
      - "8880:8080"
    restart: unless-stopped
    networks:
      - monitoring_network

  loki:
    image: grafana/loki:2.9.5
    ports:
      - "3100:3100"
    command:
      - -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    restart: unless-stopped
    networks:
      - monitoring_network

  promtail:
    image: grafana/promtail:2.9.5
    volumes:
      - "/var/log:/var/log"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/etc/promtail:/etc/promtail"
    command:
      - -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring_network

  nvidia-cuda-exporter:
    image: corosif/nvidia-cuda-exporter:0.0.2
    ports:
      - "8888:8888"
    volumes:
      - /usr/local/nvidia:/usr/local/nvidia
    restart: unless-stopped
    networks:
      - monitoring_network
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  watchtower:
    image: containrrr/watchtower:1.7.1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command:
      - --interval 30
    restart: unless-stopped
    networks:
      - monitoring_network

volumes:
  open-webui:
  prometheus_data:
  grafana_data:
  loki_data:
  alertmanager_data:

networks:
  monitoring_network:
    driver: bridge
