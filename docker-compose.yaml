version: '3.8'

services:
  keycloak:
    image: keycloak/keycloak:24.0.5
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
    ports:
      - '8088:8080'
    restart: always
    networks:
      - network

  postgres:
    image: postgres:16.4
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - network
    restart: always

  open-webui:
    image: ghcr.io/open-webui/open-webui:0.3.34
    network_mode: 'host'
    volumes:
      - open-webui:/app/backend/data
    environment:
      - OLLAMA_BASE_URLS=http://127.0.0.1:11434
    restart: always

  prometheus:
    image: prom/prometheus:v2.55.0
    volumes:
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    restart: always
    networks:
      - network

  grafana:
    image: grafana/grafana:7.5.17
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - '3000:3000'
    restart: always
    networks:
      - network

  nodeexporter:
    image: prom/node-exporter:v1.8.2
    volumes:
      - '/:/host:ro,rslave'
    command:
      - '--path.rootfs=/host'
    ports:
      - '9100:9100'
    restart: always
    networks:
      - network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.50.0
    volumes:
      - '/:/rootfs'
      - '/var/run:/var/run'
      - '/sys:/sys'
      - '/var/lib/docker/:/var/lib/docker'
      - '/dev/disk/:/dev/disk'
    privileged: true
    devices:
      - '/dev/kmsg'
    ports:
      - '8880:8080'
    restart: always
    networks:
      - network

  loki:
    image: grafana/loki:3.2.1
    ports:
      - '3100:3100'
    command:
      - -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    restart: always
    networks:
      - network

  promtail:
    image: grafana/promtail:3.2.1
    volumes:
      - '/var/log:/var/log'
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
      - '/etc/promtail:/etc/promtail'
    command:
      - -config.file=/etc/promtail/config.yml
    restart: always
    networks:
      - network

  blackbox-exporter:
    image: bitnami/blackbox-exporter:0.25.0
    volumes:
      - '/etc/blackbox/:/config/'
    command:
      - '--config.file=/config/blackbox.yml'
    ports:
      - '9116:9115'
    restart: always
    networks:
      - network

  nvidia-cuda-exporter:
    image: corosif/nvidia-cuda-exporter:0.0.2
    ports:
      - '8888:8888'
    volumes:
      - '/usr/local/nvidia:/usr/local/nvidia'
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ['gpu']
    networks:
      - network
    restart: always

volumes:
  open-webui:
  prometheus_data:
  grafana_data:
  loki_data:
  alertmanager_data:
  postgres_data:

networks:
  network:
    driver: bridge
